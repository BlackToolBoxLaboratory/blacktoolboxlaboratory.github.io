{"version":3,"file":"6570.42b9ea89aa3725bdead2.js","mappings":"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","sources":["webpack://homepage_react/./src/components/packages/form/BasicInput.jsx","webpack://homepage_react/./src/routes/packages/form/BasicInputContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport BTBList from '@blacktoolbox/react-list';\nimport BTBTable from '@blacktoolbox/react-table';\n\nimport { lang } from '@src/plugins/btblab-prototype-languages.js';\nimport { openLink } from '@src/utils/functions.js';\n\nimport { Page, PageHead, Section, Block } from '@src/modules/pageLayout';\nimport packageInfo from './packageInfo.js';\n\nconst preInstall = `$ npm install --save @blacktoolbox/react-form\n\nimport { Input } from '@blacktoolbox/react-form'\nimport '@blacktoolbox/react-form/lib/index.css'`;\n\nconst preRender = `<BTBInput\n        prependNode=\" String || Node \" \n        appendNode=\" String || Node \" \n        beforeNode=\" String || Node \" \n        afterNode=\" String || Node \"\n        styleObj=\" Object \"\n        { props } \n/>`;\n  \nconst preStyleObj = `styleObj = {\n        [ className ]: { inline CSS }\n}`;\n  \nconst nodeTree = [\n  {\n    id: 'form',\n    title: '<div> .btb-react-form .form-input .input-disabled .input-readonly .input-focused',\n    children: [\n      {\n        id: 'input_outer',\n        title: '<div> .input_outer',\n        children: [\n          {\n            id: 'prepend',\n            title: '<div> .outer_item .item-prepend',\n          },\n          {\n            id: 'inner',\n            title: '<div> .outer_item .item-inner',\n            children: [\n              {\n                id: 'before',\n                title: '<div> .inner_item .item-before',\n              },\n              {\n                id: 'input',\n                title: '<input> .inner_item .item-input',\n              },\n              {\n                id: 'after',\n                title: '<div> .inner_item .item-after',\n              },\n            ],\n          },\n          {\n            id: 'append',\n            title: '<div> .outer_item .item-append',\n          },\n        ]\n      }\n    ],\n  },\n];\n\nconst tableHeadArr_property = [\n  { name: 'Property Name', id: 'title' },\n  { name: 'Type', id: 'type' },\n  { name: 'Default', id: 'default' },\n  { name: 'Notice', id: 'notice' },\n];\n\nconst tableBodyArr_basic = [\n  {\n    title: 'prependNode',\n    type: 'package.paramType.string||package.paramType.node',\n    default: 'undefined',\n    notice: 'package.form.property.prependNode',\n  },\n  {\n    title: 'appendNode',\n    type: 'package.paramType.string||package.paramType.node',\n    default: 'undefined',\n    notice: 'package.form.property.appendNode',\n  },\n  {\n    title: 'beforeNode',\n    type: 'package.paramType.string||package.paramType.node',\n    default: 'undefined',\n    notice: 'package.form.property.beforeNode',\n  },\n  {\n    title: 'afterNode',\n    type: 'package.paramType.string||package.paramType.node',\n    default: 'undefined',\n    notice: 'package.form.property.afterNode',\n  },\n  { title: 'styleObj', type: 'package.paramType.object', default: '{}', notice: 'package.button.property.styleObj' },\n  {\n    title: 'props',\n    type: 'package.paramType.any',\n    default: 'undefined',\n    notice: 'package.form.property.input',\n  },\n];\n\nconst tableSlotObj = {\n  'td-type': (data, column) => {\n    let sep = data[column.id].split('||');\n    let result = '';\n    if (sep.length > 0) {\n      result = sep\n        .map((item) => {\n          return lang.translate(item);\n        })\n        .join(' || ');\n    } else {\n      result = data[column.id] === 'useRef' ? 'useRef' : lang.translate(data[column.id]);\n    }\n    return result;\n  },\n  'td-notice': (data, column) => {\n    return lang.translate(data[column.id]);\n  },\n};\n\nconst Basic = () => {\n  useSelector((state) => {\n    return {\n      languageSetting: state.language.languageSetting,\n    };\n  });\n\n  return (\n    <Page id=\"btb-pkg-form-basic\">\n      <PageHead title={lang.translate('package.form.name.input')} clickBtn={openLink} linkList={packageInfo.linkList} />\n      <Section\n        head={\n          <>\n            {`${lang.translate('package.version_colon')}${packageInfo.version}`}\n            <br />\n            {`${lang.translate('package.release_colon')}${packageInfo.updated}`}\n          </>\n        }\n      >\n        <p>{lang.translate(packageInfo.description)}</p>\n      </Section>\n      <Section head={lang.translate('package.section.installation')}>\n        <pre className=\"page_pre\">{preInstall}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.render')}>\n        <pre className=\"page_pre\">{preRender}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.parameters')}>\n        <BTBTable\n          className=\"page_table\"\n          mode=\"list\"\n          headData={tableHeadArr_property}\n          bodyData={tableBodyArr_basic}\n          slotObj={tableSlotObj}\n        />\n        <Block title=\"styleObj\">\n          <p>{lang.translate('package.form.parameters.styleObj')}</p>\n          <pre className=\"page_pre\">{preStyleObj}</pre>\n        </Block>\n      </Section>\n      <Section head={lang.translate('package.section.nodeTree')}>\n        <BTBList className=\"page_node_tree\" dataList={nodeTree} />\n      </Section>\n    </Page>\n  );\n};\n\nexport default Basic;\n","import React from 'react';\n\nimport PKGFormBasicInput from '@src/components/packages/form/BasicInput.jsx';\n\nconst BasicInputContaier = () => {\n  return <PKGFormBasicInput />;\n};\n\nexport default BasicInputContaier;\n"],"names":["nodeTree","id","title","children","tableHeadArr_property","name","tableBodyArr_basic","type","default","notice","tableSlotObj","data","column","sep","split","length","map","item","lang","join","useSelector","state","languageSetting","language","React","Page","PageHead","clickBtn","openLink","linkList","packageInfo","Section","head","concat","className","BTBTable","mode","headData","bodyData","slotObj","Block","BTBList","dataList","PKGFormBasicInput"],"sourceRoot":""}