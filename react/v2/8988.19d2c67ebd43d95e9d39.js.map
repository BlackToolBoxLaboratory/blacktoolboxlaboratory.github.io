{"version":3,"file":"8988.19d2c67ebd43d95e9d39.js","mappings":"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","sources":["webpack://homepage_react/./src/components/packages/button/BasicButton.jsx","webpack://homepage_react/./src/routes/packages/button/BasicButtonContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport BTBList from '@blacktoolbox/react-list';\nimport BTBTable from '@blacktoolbox/react-table';\n\nimport { lang } from '@src/plugins/btblab-prototype-languages.js';\nimport { openLink } from '@src/utils/functions.js';\nimport { Page, PageHead, Section, Block } from '@src/modules/pageLayout';\n\nimport packageInfo from './packageInfo.js';\n\nconst preInstall = `$ npm install --save @blacktoolbox/react-button\n\nimport { Button } from '@blacktoolbox/react-button'\nimport '@blacktoolbox/react-button/lib/index.css'`;\n\nconst preRender = `<BTBButton \n        prependNode=\" String || Node \" \n        appendNode=\" String || Node \"\n        styleObj=\" Object \" \n        onClick=\" function(props){} \" \n        onPrependClick=\" function(props){} \"\n        onCoreClick=\" function(props){} \"\n        onAppendClick=\" function(props){} \"\n        disabled=\" Boolean \"\n>\n        { children }\n</BTBButton>`;\n\nconst preStyleObj = `styleObj = {\n        [ className ]: { inline CSS }\n}`;\n\nconst nodeTree = [\n  {\n    id: 'button',\n    title: '<button> .btb-react-button .button-disabled',\n    children: [\n      {\n        id: 'prepend',\n        title: '<div> .button_item .item-prepend',\n      },\n      {\n        id: 'core',\n        title: '<div> .button_item .item-core',\n      },\n      {\n        id: 'append',\n        title: '<div> .button_item .item-append',\n      },\n    ],\n  },\n];\n\nconst tableHeadArr_property = [\n  { name: 'Property Name', id: 'title' },\n  { name: 'Type', id: 'type' },\n  { name: 'Default', id: 'default' },\n  { name: 'Notice', id: 'notice' },\n];\n\nconst tableBodyArr = [\n  {\n    title: 'prependNode',\n    type: 'package.paramType.string||package.paramType.node',\n    default: 'undefined',\n    notice: 'package.button.property.prependNode',\n  },\n  {\n    title: 'appendNode',\n    type: 'package.paramType.string||package.paramType.node',\n    default: 'undefined',\n    notice: 'package.button.property.appendNode',\n  },\n  { title: 'styleObj', type: 'package.paramType.object', default: '{}', notice: 'package.button.property.styleObj' },\n  {\n    title: 'onClick',\n    type: 'package.paramType.function',\n    default: '()=>{}',\n    notice: 'package.button.property.onButtonClick',\n  },\n  {\n    title: 'onPrependClick',\n    type: 'package.paramType.function',\n    default: '()=>{}',\n    notice: 'package.button.property.onPrependClick',\n  },\n  {\n    title: 'onCoreClick',\n    type: 'package.paramType.function',\n    default: '()=>{}',\n    notice: 'package.button.property.onCoreClick',\n  },\n  {\n    title: 'onAppendClick',\n    type: 'package.paramType.function',\n    default: '()=>{}',\n    notice: 'package.button.property.onAppendClick',\n  },\n  {\n    title: 'disabled',\n    type: 'package.paramType.boolean',\n    default: 'undefined',\n    notice: 'package.button.property.disabled',\n  },\n  { title: 'ref', type: 'useRef', default: 'undefined', notice: 'package.button.property.ref' },\n];\n\nconst tableSlotObj = {\n  'td-type': (data, column) => {\n    let sep = data[column.id].split('||');\n    let result = '';\n    if (sep.length > 0) {\n      result = sep\n        .map((item) => {\n          return lang.translate(item);\n        })\n        .join(' || ');\n    } else {\n      result = data[column.id] === 'useRef' ? 'useRef' : lang.translate(data[column.id]);\n    }\n    return result;\n  },\n  'td-notice': (data, column) => {\n    return lang.translate(data[column.id]);\n  },\n};\n\nconst BasicButton = () => {\n  useSelector((state) => {\n    return {\n      languageSetting: state.language.languageSetting,\n    };\n  });\n  return (\n    <Page id=\"btb-pkg-button-basic-button\">\n      <PageHead\n        title={lang.translate('package.button.name.button')}\n        clickBtn={openLink}\n        linkList={packageInfo.linkList}\n      />\n      <Section\n        head={\n          <>\n            {`${lang.translate('package.version_colon')}${packageInfo.version}`}\n            <br />\n            {`${lang.translate('package.release_colon')}${packageInfo.updated}`}\n          </>\n        }\n      >\n        <p>{lang.translate(packageInfo.descriptionButton)}</p>\n      </Section>\n      <Section head={lang.translate('package.section.installation')}>\n        <pre className=\"page_pre\">{preInstall}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.render')}>\n        <pre className=\"page_pre\">{preRender}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.parameters')}>\n        <BTBTable\n          className=\"page_table\"\n          mode=\"list\"\n          headData={tableHeadArr_property}\n          bodyData={tableBodyArr}\n          slotObj={tableSlotObj}\n        />\n        <Block title=\"styleObj\">\n          <p>{lang.translate('package.button.parameters.styleObj')}</p>\n          <pre className=\"page_pre\">{preStyleObj}</pre>\n        </Block>\n      </Section>\n      <Section head={lang.translate('package.section.nodeTree')}>\n        <BTBList className=\"page_node_tree\" dataList={nodeTree} />\n      </Section>\n    </Page>\n  );\n};\n\nexport default BasicButton;\n","import React from 'react';\n\nimport PKGButtonBasicButton from '@src/components/packages/button/BasicButton.jsx';\n\nconst BasicButtonContaier = () => {\n  return <PKGButtonBasicButton />;\n};\n\nexport default BasicButtonContaier;\n"],"names":["nodeTree","id","title","children","tableHeadArr_property","name","tableBodyArr","type","default","notice","tableSlotObj","data","column","sep","split","length","map","item","lang","join","useSelector","state","languageSetting","language","React","Page","PageHead","clickBtn","openLink","linkList","packageInfo","Section","head","concat","className","BTBTable","mode","headData","bodyData","slotObj","Block","BTBList","dataList","PKGButtonBasicButton"],"sourceRoot":""}