{"version":3,"file":"3979.ce9c72d79100932a2d56.js","mappings":"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","sources":["webpack://homepage_react/./src/components/packages/table/Basic.jsx","webpack://homepage_react/./src/routes/packages/table/BasicContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport BTBList from '@blacktoolbox/react-list';\nimport BTBTable from '@blacktoolbox/react-table';\n\nimport { lang } from '@src/plugins/btblab-prototype-languages.js';\nimport { openLink } from '@src/utils/functions.js';\n\nimport { Page, PageHead, Section, Block } from '@src/modules/pageLayout';\nimport packageInfo from './packageInfo.js';\n\nconst preInstall = `$ npm install --save @blacktoolbox/react-table\n\nimport BTBTable from '@blacktoolbox/react-table'\nimport '@blacktoolbox/react-table/lib/index.css'`;\n\nconst preRender = `<BTBTable\n        headData=\" Array of headObj\" \n        bodyData=\" Array of bodyObj \"\n        mode=\" String \"\n        styleObj=\" Object \"\n        slotObj=\" Object \"\n        onDataClick=\" function(bodyObj){} \"/>`;\n\nconst preHeadObj = `headObj = {\n        id: '',\n        name: ''\n}`;\n\nconst preBodyObj = `bodyObj = {\n        [ headObj.index ] : ''\n}`;\n\nconst preStyleObj = `styleObj = {\n        [ className ]: { inline CSS }\n}`;\n\nconst preSlotObj = `slotObj = {\n        [ \\`th_\\${ headObj.id }\\` ] : '',\n        [ \\`td_\\${ headObj.id }\\` ] : ''\n}`;\n\nconst nodeTree_list = [\n  {\n    id: 'list',\n    title: '<dib> .btb-react-table',\n    children: [\n      {\n        id: 'table',\n        title: '<table> .table_list]',\n        children: [\n          {\n            id: 'thead',\n            title: '<thead> .list_head',\n            children: [\n              {\n                id: 'thead_tr',\n                title: '<tr> .head_tr',\n                children: [\n                  {\n                    id: 'tr_th',\n                    title: '<th> .tr_th .th_[headObj.id]',\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            id: 'tbody',\n            title: '<tbody> .list_body',\n            children: [\n              {\n                id: 'body_tr',\n                title: '<tr> .body_tr .tr_[data order]',\n                children: [\n                  {\n                    id: 'tr_td',\n                    title: '<th> .tr_td .td_[headObj.id]',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst nodeTree_info = [\n  {\n    id: 'table',\n    title: '<div> .btb-react-table',\n    children: [\n      {\n        id: 'info',\n        title: '<table> .table_info .info-[data order]',\n        children: [\n          {\n            id: 'tbody',\n            title: '<tbody> .info_body',\n            children: [\n              {\n                id: 'tr',\n                title: '<tr> .body_tr .tr-[headObj.id]',\n                children: [\n                  {\n                    id: 'th',\n                    title: '<th> .tr_th .th-[headObj.id]',\n                  },\n                  {\n                    id: 'td',\n                    title: '<td> .tr_td .td-[headObj.id]',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst nodeTree_compare = [\n  {\n    id: 'table',\n    title: '<div> .btb-react-table',\n    children: [\n      {\n        id: 'compare',\n        title: '<table> .table_compare',\n        children: [\n          {\n            id: 'tbody',\n            title: '<tbody> .compare_body',\n            children: [\n              {\n                id: 'tr',\n                title: '<tr> .tbody_tr .tr-[headObj.id]',\n                children: [\n                  {\n                    id: 'th',\n                    title: '<th> .tr_th .th-[headObj.id]',\n                  },\n                  {\n                    id: 'td',\n                    title: '<td> .tr_td .td-[headObj.id] .td-[data order]',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst tableHeadArr_property = [\n  { name: 'Property Name', id: 'title' },\n  { name: 'Type', id: 'type' },\n  { name: 'Default', id: 'default' },\n  { name: 'Notice', id: 'notice' },\n];\nconst tableHeadArr_entry = [\n  { name: 'Name', id: 'title' },\n  { name: 'Type', id: 'type' },\n  { name: 'Notice', id: 'notice' },\n];\nconst tableBodyArr_basic = [\n  { title: 'headData', type: 'package.paramType.array', default: '[]', notice: 'package.table.property.headData' },\n  { title: 'bodyData', type: 'package.paramType.array', default: '[]', notice: 'package.table.property.bodyData' },\n  { title: 'mode', type: 'package.paramType.string', default: '\"list\"', notice: 'package.table.property.mode' },\n  { title: 'styleObj', type: 'package.paramType.object', default: '{}', notice: 'package.table.property.styleObj' },\n  { title: 'slotObj', type: 'package.paramType.object', default: '{}', notice: 'package.table.property.slotObj' },\n  {\n    title: 'onDataClick',\n    type: 'package.paramType.function',\n    default: '()=>{}',\n    notice: 'package.table.property.onDataClick',\n  },\n  { title: 'ref', type: 'useRef', default: 'undefined', notice: 'package.table.property.ref' },\n];\nconst tableBodyArr_headObj = [\n  { title: 'id', type: 'package.paramType.string', default: '[]', notice: 'package.table.headObj.id' },\n  { title: 'name', type: 'package.paramType.string', default: '[]', notice: 'package.table.headObj.name' },\n];\nconst tableBodyArr_slot = [\n  {\n    title: '[ th_${ headObj.id } ]',\n    type: 'package.paramType.string||package.paramType.node||package.paramType.function',\n    notice: 'package.table.slotObj.th',\n  },\n  {\n    title: '[ td_${ headObj.id } ]',\n    type: 'package.paramType.string||package.paramType.node||package.paramType.function',\n    notice: 'package.table.slotObj.td',\n  },\n];\n\nconst tableSlotObj = {\n  'td-type': (data, column) => {\n    let sep = data[column.id].split('||');\n    let result = '';\n    if (sep.length > 0) {\n      result = sep\n        .map((item) => {\n          return lang.translate(item);\n        })\n        .join(' || ');\n    } else {\n      result = data[column.id] === 'useRef' ? 'useRef' : lang.translate(data[column.id]);\n    }\n    return result;\n  },\n  'td-notice': (data, column) => {\n    return lang.translate(data[column.id]);\n  },\n};\n\nconst Basic = () => {\n  useSelector((state) => {\n    return {\n      languageSetting: state.language.languageSetting,\n    };\n  });\n  return (\n    <Page id=\"btb-pkg-table-basic\">\n      <PageHead title={lang.translate('package.table.name')} clickBtn={openLink} linkList={packageInfo.linkList} />\n      <Section\n        head={\n          <>\n            {`${lang.translate('package.version_colon')}${packageInfo.version}`}\n            <br />\n            {`${lang.translate('package.release_colon')}${packageInfo.updated}`}\n          </>\n        }\n      >\n        <p>{lang.translate(packageInfo.description)}</p>\n      </Section>\n      <Section head={lang.translate('package.section.installation')}>\n        <pre className=\"page_pre\">{preInstall}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.render')}>\n        <pre className=\"page_pre\">{preRender}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.parameters')}>\n        <BTBTable\n          className=\"page_table\"\n          mode=\"list\"\n          headData={tableHeadArr_property}\n          bodyData={tableBodyArr_basic}\n          slotObj={tableSlotObj}\n        />\n        <Block title=\"headObj\">\n          <pre className=\"page_pre\">{preHeadObj}</pre>\n          <BTBTable\n            className=\"page_table\"\n            mode=\"list\"\n            headData={tableHeadArr_entry}\n            bodyData={tableBodyArr_headObj}\n            slotObj={tableSlotObj}\n          />\n        </Block>\n        <Block title=\"bodyObj\">\n          <pre className=\"page_pre\">{preBodyObj}</pre>\n        </Block>\n        <Block title=\"styleObj\">\n          <p>{lang.translate('package.table.parameters.styleObj')}</p>\n          <pre className=\"page_pre\">{preStyleObj}</pre>\n        </Block>\n        <Block title=\"slotObj\">\n          <p>{lang.translate('package.table.parameters.slotObj')}</p>\n          <pre className=\"page_pre\">{preSlotObj}</pre>\n          <BTBTable\n            className=\"page_table\"\n            mode=\"list\"\n            headData={tableHeadArr_entry}\n            bodyData={tableBodyArr_slot}\n            slotObj={tableSlotObj}\n          />\n        </Block>\n      </Section>\n      <Section head={lang.translate('package.section.nodeTree')}>\n        <Block title={lang.translate('package.table.nodeTree.list')}>\n          <BTBList className=\"page_node_tree\" dataList={nodeTree_list} />\n          <p>{lang.translate('package.table.nodeTree.notice')}</p>\n        </Block>\n        <Block title={lang.translate('package.table.nodeTree.info')}>\n          <BTBList className=\"page_node_tree\" dataList={nodeTree_info} />\n          <p>{lang.translate('package.table.nodeTree.notice')}</p>\n        </Block>\n        <Block title={lang.translate('package.table.nodeTree.compare')}>\n          <BTBList className=\"page_node_tree\" dataList={nodeTree_compare} />\n          <p>{lang.translate('package.table.nodeTree.notice')}</p>\n        </Block>\n      </Section>\n    </Page>\n  );\n};\n\nexport default Basic;\n","import React from 'react';\n\nimport PKGTableBasic from '@src/components/packages/table/Basic.jsx';\n\nconst BasicContaier = () => {\n  return <PKGTableBasic />;\n};\n\nexport default BasicContaier;\n"],"names":["nodeTree_list","id","title","children","nodeTree_info","nodeTree_compare","tableHeadArr_property","name","tableHeadArr_entry","tableBodyArr_basic","type","default","notice","tableBodyArr_headObj","tableBodyArr_slot","tableSlotObj","data","column","sep","split","length","map","item","lang","join","useSelector","state","languageSetting","language","React","Page","PageHead","clickBtn","openLink","linkList","packageInfo","Section","head","concat","className","BTBTable","mode","headData","bodyData","slotObj","Block","BTBList","dataList","PKGTableBasic"],"sourceRoot":""}