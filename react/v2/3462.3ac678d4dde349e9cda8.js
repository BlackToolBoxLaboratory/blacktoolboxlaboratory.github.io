"use strict";(self.webpackChunkhomepage_react=self.webpackChunkhomepage_react||[]).push([[3462],{3462:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var a=t(7294),r=t(9704),o=t(6034),c=t(6742),i=t(2007),l=t(6520),s=t(7176);function p(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,r,o,c,i=[],l=!0,s=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=o.call(t)).done)&&(i.push(a.value),i.length!==n);l=!0);}catch(e){s=!0,r=e}finally{try{if(!l&&null!=t.return&&(c=t.return(),Object(c)!==c))return}finally{if(s)throw r}}return i}}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return u(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return u(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=new Array(n);t<n;t++)a[t]=e[t];return a}var g=function(e){var n=p((0,a.useState)(e),2),t=n[0],r=n[1];return{activeID:t,onEntryClick:function(e,n){console.log("page",e,n),r(e)},onPrevClick:function(e){console.log("prev",e);var n=p(t.split("_"),2),a=n[0],o=n[1],c=Math.max(parseInt(o,10)-1,0);r("".concat(a,"_").concat(c))},onNextClick:function(e){console.log("next",e);var n=p(t.split("_"),2),a=n[0],o=n[1],c=Math.min(parseInt(o,10)+1,9);r("".concat(a,"_").concat(c))}}},d=function(){(0,r.v9)((function(e){return{languageSetting:e.language.languageSetting}}));var e=g("list_0");return a.createElement(l.T3,{id:"btb-pkg-button-example-pagination"},a.createElement(l.yG,{title:c.K.translate("package.button.example.pagination.title"),clickBtn:i.n,linkList:s.Z.linkList}),a.createElement(l.$0,{head:a.createElement(a.Fragment,null,"".concat(c.K.translate("package.version_colon")).concat(s.Z.version),a.createElement("br",null),"".concat(c.K.translate("package.release_colon")).concat(s.Z.updated))},a.createElement("p",null,c.K.translate("package.button.example.pagination.description"))),a.createElement(l.$0,{head:c.K.translate("package.section.example")},a.createElement(o.z,{className:"pagination_tools",prependNode:"<< Prev",appendNode:"Next >>",onPrependClick:e.onPrevClick,onAppendClick:e.onNextClick},a.createElement(o.h,{className:"pagination_pages",buttonList:["1","2","3","4","5","6","7","8","9"],activeID:e.activeID,onEntryClick:e.onEntryClick}))),a.createElement(l.$0,{head:c.K.translate("package.section.sourceCode")},a.createElement("pre",{className:"page_pre"},'<BTBButton\n        className="pagination_tools"\n        prependNode="<< Prev"\n        appendNode="Next >>"\n        onPrependClick={statePage.onPrevClick}\n        onAppendClick={statePage.onNextClick}\n>\n        <BTBButtonGroup\n                className="pagination_pages"\n                buttonList={buttonList}\n                activeID={statePage.activeID}\n                onEntryClick={statePage.onEntryClick}\n        />\n</BTBButton>'),a.createElement(l.gO,{title:"useState"},a.createElement("pre",{className:"page_pre"},"statePage = usePageState('list_0');\n\nconst usePageState = (dafaultPageID) => {\n        const [activeID, updatePageID] = useState(dafaultPageID);\n        return {\n                activeID,\n                onEntryClick: (id, content) => {\n                        updatePageID(id);\n                },\n                onPrevClick: (event) => {\n                        const minPage = 0;\n                        const [type, index] = activeID.split('_');\n                        const page = Math.max(parseInt(index, 10) - 1, minPage);\n                        updatePageID(`${type}_${page}`);\n                },\n                onNextClick: (event) => {\n                        const maxPage = 9;\n                        const [type, index] = activeID.split('_');\n                        const page = Math.min(parseInt(index, 10) + 1, maxPage);\n                        updatePageID(`${type}_${page}`);\n                },\n        };\n};")),a.createElement(l.gO,{title:"style: LESS"},a.createElement("pre",{className:"page_pre"},".pagination_tools {\n        .button_item{\n                &.itme-core {\n                        border-left: 1px solid #808080;\n                        border-right: 1px solid #808080;\n                        padding: 0;\n                }\n        }\n}\n.pagination_pages {\n        border: none;\n        border-radius: unset;\n        .group_button {\n                &:first-child,\n                &:last-child {\n                        padding: 0.25rem;\n                }\n                &.button-active {\n                        background-color: #cdcdcd;\n                }\n        }\n}"))))},m=function(){return a.createElement(d,null)}}}]);