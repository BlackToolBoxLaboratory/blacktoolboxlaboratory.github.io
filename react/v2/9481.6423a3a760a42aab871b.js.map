{"version":3,"file":"9481.6423a3a760a42aab871b.js","mappings":"6OAoBA,EAlBoB,CAClBA,QAASC,EAAAA,EAAAA,aAAAA,QACTC,QAASD,EAAAA,EAAAA,aAAAA,QACTE,YAAaF,EAAAA,EAAAA,aAAAA,YACbG,SAAU,CACR,CACEC,GAAI,SACJC,GAAI,CAAC,MAAO,UACZC,IAAKN,EAAAA,EAAAA,aAAAA,KAAAA,QAEP,CACEI,GAAI,MACJC,GAAI,CAAC,MAAO,OACZC,IAAKN,EAAAA,EAAAA,aAAAA,KAAAA,OCyBLO,EAAwB,CAC5B,CAAEC,KAAM,gBAAiBJ,GAAI,SAC7B,CAAEI,KAAM,OAAQJ,GAAI,QACpB,CAAEI,KAAM,UAAWJ,GAAI,WACvB,CAAEI,KAAM,SAAUJ,GAAI,WAGlBK,EAAqB,CACzB,CACEC,MAAO,OACPC,KAAM,2BACNC,QAAS,6BACTC,OAAQ,uCAINC,EAAe,CACnB,UAAW,SAACC,EAAMC,GAChB,IAAIC,EAAMF,EAAKC,EAAOZ,IAAIc,MAAM,MAWhC,OATID,EAAIE,OAAS,EACNF,EACNG,KAAI,SAACC,GACJ,OAAOC,EAAAA,EAAAA,UAAeD,EACxB,IACCE,KAAK,QAEqB,WAApBR,EAAKC,EAAOZ,IAAmB,SAAWkB,EAAAA,EAAAA,UAAeP,EAAKC,EAAOZ,IAGlF,EACA,YAAa,SAACW,EAAMC,GAClB,OAAOM,EAAAA,EAAAA,UAAeP,EAAKC,EAAOZ,IACpC,GA+CF,EA5C0B,WAOxB,OANAoB,EAAAA,EAAAA,KAAY,SAACC,GACX,MAAO,CACLC,gBAAiBD,EAAME,SAASD,gBAEpC,IAGEE,EAAAA,cAACC,EAAAA,GAAI,CAACzB,GAAG,8BACPwB,EAAAA,cAACE,EAAAA,GAAQ,CAACpB,MAAOY,EAAAA,EAAAA,UAAe,6BAA8BS,SAAUC,EAAAA,EAAU7B,SAAU8B,EAAAA,WAC5FL,EAAAA,cAACM,EAAAA,GAAO,CACNC,KACEP,EAAAA,cAAAA,EAAAA,SAAA,QAAAQ,OACMd,EAAAA,EAAAA,UAAe,0BAAwBc,OAAGH,EAAAA,SAC9CL,EAAAA,cAAA,WAAM,GAAAQ,OACFd,EAAAA,EAAAA,UAAe,0BAAwBc,OAAGH,EAAAA,WAIlDL,EAAAA,cAAA,SAAIN,EAAAA,EAAAA,UAAeW,EAAAA,eAErBL,EAAAA,cAACM,EAAAA,GAAO,CAACC,KAAMb,EAAAA,EAAAA,UAAe,iCAC5BM,EAAAA,cAAA,OAAKS,UAAU,YAxFJ,wKA0FbT,EAAAA,cAACM,EAAAA,GAAO,CAACC,KAAMb,EAAAA,EAAAA,UAAe,2BAC5BM,EAAAA,cAAA,OAAKS,UAAU,YAvFL,8GAyFZT,EAAAA,cAACM,EAAAA,GAAO,CAACC,KAAMb,EAAAA,EAAAA,UAAe,+BAC5BM,EAAAA,cAACU,EAAAA,EAAQ,CACPD,UAAU,aACVE,KAAK,OACLC,SAAUjC,EACVkC,SAAUhC,EACViC,QAAS5B,IAEXc,EAAAA,cAACe,EAAAA,GAAK,CAACjC,MAAM,uBACXkB,EAAAA,cAAA,SAAIN,EAAAA,EAAAA,UAAe,yDACnBM,EAAAA,cAAA,OAAKS,UAAU,YA7FM,ygBAkG/B,EC9GA,EAJyB,WACvB,OAAOT,EAAAA,cAACgB,EAAoB,KAC9B,C","sources":["webpack://homepage_react/./src/components/packages/localstorage/packageInfo.js","webpack://homepage_react/./src/components/packages/localstorage/Basic.jsx","webpack://homepage_react/./src/routes/packages/localstorage/LocalstorageContainer.jsx"],"sourcesContent":["import packageObj from '@src/assets/definitions/packageObj';\n\nconst packageInfo = {\n  version: packageObj.localstorage.version,\n  updated: packageObj.localstorage.updated,\n  description: packageObj.localstorage.description,\n  linkList: [\n    {\n      id: 'github',\n      fa: ['fab', 'github'],\n      url: packageObj.localstorage.link.github,\n    },\n    {\n      id: 'npm',\n      fa: ['fab', 'npm'],\n      url: packageObj.localstorage.link.npm,\n    },\n  ],\n};\n\nexport default packageInfo;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport BTBTable from '@blacktoolbox/react-table';\n\nimport { lang } from '@src/plugins/btblab-prototype-languages.js';\nimport { openLink } from '@src/utils/functions.js';\nimport { Page, PageHead, Section, Block } from '@src/modules/pageLayout';\n\nimport packageInfo from './packageInfo.js';\n\nconst preInstall = `$ npm install --save @blacktoolbox/react-sync-localstorage\n\nimport { SyncLocalStorageProvider, useSyncLocalStorage } from '@blacktoolbox/react-sync-localstorage'`;\n\nconst preRender = `<SyncLocalStorageProvider \n        name=\" String \"\n>\n        { children }\n</SyncLocalStorageProvider>`;\n\nconst preUseSyncLocalStorage = `const syncLocalstorage = useSyncLocalStorage();\n\n// parse object, parse()\nconst localstorage = syncLocalstorage.parse();\n\n// replace object, replace(object)\nsyncLocalstorage.replace(Object);\n\n// get item from object, getItem(key)\nconst item = syncLocalstorage.getItem(String);\n\n// set item, setItem(key, value)\nsyncLocalstorage.setItem(String, any);\n\n// check item, hasItem(key)\nconst result = syncLocalstorage.hasItem(String);\n\n// delete item, deleteItem(key)\nsyncLocalstorage.deleteItem(String);`;\n\nconst tableHeadArr_property = [\n  { name: 'Property Name', id: 'title' },\n  { name: 'Type', id: 'type' },\n  { name: 'Default', id: 'default' },\n  { name: 'Notice', id: 'notice' },\n];\n\nconst tableBodyArr_basic = [\n  {\n    title: 'name',\n    type: 'package.paramType.string',\n    default: '\"btblab-sync-localstorage\"',\n    notice: 'package.localstorage.property.name',\n  },\n];\n\nconst tableSlotObj = {\n  'td-type': (data, column) => {\n    let sep = data[column.id].split('||');\n    let result = '';\n    if (sep.length > 0) {\n      result = sep\n        .map((item) => {\n          return lang.translate(item);\n        })\n        .join(' || ');\n    } else {\n      result = data[column.id] === 'useRef' ? 'useRef' : lang.translate(data[column.id]);\n    }\n    return result;\n  },\n  'td-notice': (data, column) => {\n    return lang.translate(data[column.id]);\n  },\n};\n\nconst BasicLocalstorage = () => {\n  useSelector((state) => {\n    return {\n      languageSetting: state.language.languageSetting,\n    };\n  });\n\n  return (\n    <Page id=\"btb-pkg-localstorage-basic\">\n      <PageHead title={lang.translate('package.localstorage.name')} clickBtn={openLink} linkList={packageInfo.linkList} />\n      <Section\n        head={\n          <>\n            {`${lang.translate('package.version_colon')}${packageInfo.version}`}\n            <br />\n            {`${lang.translate('package.release_colon')}${packageInfo.updated}`}\n          </>\n        }\n      >\n        <p>{lang.translate(packageInfo.description)}</p>\n      </Section>\n      <Section head={lang.translate('package.section.installation')}>\n        <pre className=\"page_pre\">{preInstall}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.render')}>\n        <pre className=\"page_pre\">{preRender}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.parameters')}>\n        <BTBTable\n          className=\"page_table\"\n          mode=\"list\"\n          headData={tableHeadArr_property}\n          bodyData={tableBodyArr_basic}\n          slotObj={tableSlotObj}\n        />\n        <Block title=\"useSyncLocalStorage\">\n          <p>{lang.translate('package.localstorage.description.useSyncLocalStorage')}</p>\n          <pre className=\"page_pre\">{preUseSyncLocalStorage}</pre>\n        </Block>\n      </Section>\n    </Page>\n  );\n};\n\nexport default BasicLocalstorage;\n","import React from 'react';\n\nimport PKGLocalstorageBasic from '@src/components/packages/localstorage/Basic.jsx';\n\nconst PackagesContaier = () => {\n  return <PKGLocalstorageBasic />;\n};\n\nexport default PackagesContaier;\n"],"names":["version","packageObj","updated","description","linkList","id","fa","url","tableHeadArr_property","name","tableBodyArr_basic","title","type","default","notice","tableSlotObj","data","column","sep","split","length","map","item","lang","join","useSelector","state","languageSetting","language","React","Page","PageHead","clickBtn","openLink","packageInfo","Section","head","concat","className","BTBTable","mode","headData","bodyData","slotObj","Block","PKGLocalstorageBasic"],"sourceRoot":""}