{"version":3,"file":"3099.7695b3fdf0e89dd6b416.js","mappings":"uPAmEMA,EAAwB,CAC5B,CAAEC,KAAM,OAAQC,GAAI,QACpB,CAAED,KAAM,OAAQC,GAAI,WACpB,CAAED,KAAM,KAAMC,GAAI,UAClB,CAAED,KAAM,KAAMC,GAAI,UAClB,CAAED,KAAM,MAAOC,GAAI,WACnB,CAAED,KAAM,mBAAoBC,GAAI,WAChC,CAAED,KAAM,SAAUC,GAAI,eAGlBC,EAAoB,CACxB,CACEF,KAAM,WACNG,QAAS,QACTC,OAAQ,MACRC,OAAQ,eACRC,QAAS,oBACTC,QAAS,iBACTC,OAAQ,EACRC,WAAY,gBAEd,CACET,KAAM,WACNG,QAAS,WACTC,OAAQ,UACRC,OAAQ,eACRC,QAAS,oBACTC,QAAS,iBACTC,OAAQ,EACRC,WAAY,iBAIVC,EAAU,CACd,UAAW,cACX,YACEC,EAAAA,cAAA,YACG,WACDA,EAAAA,cAACC,EAAAA,EAAG,CAACC,UAAU,cAAcC,KAAM,CAAC,MAAO,qBAAsBC,YAAU,KAG/E,YAAa,SAACC,EAAMC,GAClB,OACEN,EAAAA,cAAA,KAAGO,KAAI,UAAAC,OAAYH,EAAKC,EAAOhB,KAAOmB,OAAO,SAASC,IAAI,cACvDL,EAAKC,EAAOhB,IAGnB,GAyDF,EAtDoB,WAMlB,OALAqB,EAAAA,EAAAA,KAAY,SAACC,GACX,MAAO,CACLC,gBAAiBD,EAAME,SAASD,gBAEpC,IAEEb,EAAAA,cAACe,EAAAA,GAAI,CAACzB,GAAG,8BACPU,EAAAA,cAACgB,EAAAA,GAAQ,CACPC,MAAOC,EAAAA,EAAAA,UAAe,oCACtBC,SAAUC,EAAAA,EACVC,SAAUC,EAAAA,EAAAA,WAEZtB,EAAAA,cAACuB,EAAAA,GAAO,CACNC,KACExB,EAAAA,cAAAA,EAAAA,SAAA,QAAAQ,OACMU,EAAAA,EAAAA,UAAe,0BAAwBV,OAAGc,EAAAA,EAAAA,SAC9CtB,EAAAA,cAAA,WAAM,GAAAQ,OACFU,EAAAA,EAAAA,UAAe,0BAAwBV,OAAGc,EAAAA,EAAAA,WAIlDtB,EAAAA,cAAA,SAAIkB,EAAAA,EAAAA,UAAe,4CAErBlB,EAAAA,cAACuB,EAAAA,GAAO,CAACC,KAAMN,EAAAA,EAAAA,UAAe,4BAC5BlB,EAAAA,cAACyB,EAAAA,EAAQ,CACPvB,UAAU,eACVwB,KAAK,UACLC,SAAUvC,EACVwC,SAAUrC,EACVQ,QAASA,KAGbC,EAAAA,cAACuB,EAAAA,GAAO,CAACC,KAAMN,EAAAA,EAAAA,UAAe,+BAC5BlB,EAAAA,cAAA,OAAKE,UAAU,YA5IL,+HA6IVF,EAAAA,cAAC6B,EAAAA,GAAK,CAACZ,MAAM,YACXjB,EAAAA,cAAA,OAAKE,UAAU,YAxIL,6UA0IZF,EAAAA,cAAC6B,EAAAA,GAAK,CAACZ,MAAM,YACXjB,EAAAA,cAAA,OAAKE,UAAU,YAjIL,6gBAmIZF,EAAAA,cAAC6B,EAAAA,GAAK,CAACZ,MAAM,WACXjB,EAAAA,cAAA,SAEI,+JAGJA,EAAAA,cAAA,OAAKE,UAAU,YAlHN,ikBAuHnB,ECjKA,EAJ6B,WAC3B,OAAOF,EAAAA,cAAC8B,EAAmB,KAC7B,C","sources":["webpack://homepage_react/./src/components/packages/table/ExampleSlot.jsx","webpack://homepage_react/./src/routes/packages/table/ExampleSlotContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { FontAwesomeIcon as FAI } from '@fortawesome/react-fontawesome';\nimport BTBTable from '@blacktoolbox/react-table';\n\nimport { lang } from '@src/plugins/btblab-prototype-languages.js';\nimport { openLink } from '@src/utils/functions.js';\n\nimport { Page, PageHead, Section, Block } from '@src/modules/pageLayout';\nimport packageInfo from './packageInfo.js';\n\nconst preRender = `<BTBTable \n        mode=\"compare\" \n        headData={headData} \n        bodyData={bodyData}\n        slotObj={slotObj}/>`;\n\nconst preHeadData = `const headDate = [\n        {name : 'Name', id : 'name' },\n        {name : 'Type', id : 'devType' },\n        {name : 'OS', id : 'osType' },\n        {name : 'IP', id : 'ipAddr' },\n        {name : 'MAC', id : 'macAddr' },\n        {name : 'Traffic(tx / rx)', id : 'traffic' },\n        {name : 'Statue', id : 'statusDesc'}\n];`;\n\nconst preBodyData = `const bodyData = [\n  {\n    name : 'Device 1',  \n    devType : 'phone',   \n    osType : 'ios',      \n    ipAddr : '192.168.0.50',   \n    macAddr : 'B4:A2:07:44:55:2A', \n    traffic : '1.7 MB / 45 KB', \n    status : 0, \n    statusDesc : 'Disconnected'\n  },\n  {\n    name : 'Device 2',  \n    devType : 'notebook',   \n    osType : 'windows',      \n    ipAddr : '192.168.0.52',   \n    macAddr : 'B4:A2:07:44:DD:FF', \n    traffic : '4.8 MB / 27 KB', \n    status : 0, \n    statusDesc : 'Disconnected'\n  }\n];`;\n\nconst preSlotObj = `const slotObj = {\n        'th-name'   : 'Device Name',\n        'th-ipAddr' : (\n                <span>\n                        {'IP Link '}\n                        <FAI className=\"item_button\" icon={['fas', 'external-link-alt']} fixedWidth />\n                </span>\n        ),\n        'td-ipAddr' : (data, column) => {\n                return (\n                        <a href={\\`http://\\${data[column.id]}\\`} target=\"_blank\" rel=\"noreferrer\">\n                                {data[column.id]}\n                        </a>\n                );\n        }\n};`;\n\nconst tableHeadArr_property = [\n  { name: 'Name', id: 'name' },\n  { name: 'Type', id: 'devType' },\n  { name: 'OS', id: 'osType' },\n  { name: 'IP', id: 'ipAddr' },\n  { name: 'MAC', id: 'macAddr' },\n  { name: 'Traffic(tx / rx)', id: 'traffic' },\n  { name: 'Statue', id: 'statusDesc' },\n];\n\nconst tableBodyArr_data = [\n  {\n    name: 'Device 1',\n    devType: 'phone',\n    osType: 'ios',\n    ipAddr: '192.168.0.50',\n    macAddr: 'B4:A2:07:44:55:2A',\n    traffic: '1.7 MB / 45 KB',\n    status: 0,\n    statusDesc: 'Disconnected',\n  },\n  {\n    name: 'Device 2',\n    devType: 'notebook',\n    osType: 'windows',\n    ipAddr: '192.168.0.52',\n    macAddr: 'B4:A2:07:44:DD:FF',\n    traffic: '4.8 MB / 27 KB',\n    status: 0,\n    statusDesc: 'Disconnected',\n  },\n];\n\nconst slotObj = {\n  'th-name': 'Device Name',\n  'th-ipAddr': (\n    <span>\n      {'IP Link '}\n      <FAI className=\"item_button\" icon={['fas', 'external-link-alt']} fixedWidth />\n    </span>\n  ),\n  'td-ipAddr': (data, column) => {\n    return (\n      <a href={`http://${data[column.id]}`} target=\"_blank\" rel=\"noreferrer\">\n        {data[column.id]}\n      </a>\n    );\n  },\n};\n\nconst ExampleSlot = () => {\n  useSelector((state) => {\n    return {\n      languageSetting: state.language.languageSetting,\n    };\n  });\n  return (\n    <Page id=\"btb-pkg-table-example-slot\">\n      <PageHead\n        title={lang.translate('package.table.example.slot.title')}\n        clickBtn={openLink}\n        linkList={packageInfo.linkList}\n      />\n      <Section\n        head={\n          <>\n            {`${lang.translate('package.version_colon')}${packageInfo.version}`}\n            <br />\n            {`${lang.translate('package.release_colon')}${packageInfo.updated}`}\n          </>\n        }\n      >\n        <p>{lang.translate('package.table.example.slot.description')}</p>\n      </Section>\n      <Section head={lang.translate('package.section.example')}>\n        <BTBTable\n          className=\"table_sample\"\n          mode=\"compare\"\n          headData={tableHeadArr_property}\n          bodyData={tableBodyArr_data}\n          slotObj={slotObj}\n        />\n      </Section>\n      <Section head={lang.translate('package.section.sourceCode')}>\n        <pre className=\"page_pre\">{preRender}</pre>\n        <Block title=\"headData\">\n          <pre className=\"page_pre\">{preHeadData}</pre>\n        </Block>\n        <Block title=\"bodyData\">\n          <pre className=\"page_pre\">{preBodyData}</pre>\n        </Block>\n        <Block title=\"slotObj\">\n          <p>\n            {\n              \"'th-name' shows the customized slot with pure string. 'th-ipAddr' shows how to customized with Node. And 'td-ipAddr' shows how to customized with function.\"\n            }\n          </p>\n          <pre className=\"page_pre\">{preSlotObj}</pre>\n        </Block>\n      </Section>\n    </Page>\n  );\n};\n\nexport default ExampleSlot;\n","import React from 'react';\n\nimport PKGTableExampleSlot from '@src/components/packages/table/ExampleSlot.jsx';\n\nconst ExampleSlotContainer = () => {\n  return <PKGTableExampleSlot />;\n};\n\nexport default ExampleSlotContainer;\n"],"names":["tableHeadArr_property","name","id","tableBodyArr_data","devType","osType","ipAddr","macAddr","traffic","status","statusDesc","slotObj","React","FAI","className","icon","fixedWidth","data","column","href","concat","target","rel","useSelector","state","languageSetting","language","Page","PageHead","title","lang","clickBtn","openLink","linkList","packageInfo","Section","head","BTBTable","mode","headData","bodyData","Block","PKGTableExampleSlot"],"sourceRoot":""}