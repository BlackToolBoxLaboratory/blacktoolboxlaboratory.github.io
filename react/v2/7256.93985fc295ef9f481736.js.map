{"version":3,"file":"7256.93985fc295ef9f481736.js","mappings":"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","sources":["webpack://homepage_react/./src/components/packages/list/Basic.jsx","webpack://homepage_react/./src/routes/packages/list/BasicContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport BTBList from '@blacktoolbox/react-list';\nimport BTBTable from '@blacktoolbox/react-table';\n\nimport { lang } from '@src/plugins/btblab-prototype-languages.js';\nimport { openLink } from '@src/utils/functions.js';\nimport { Page, PageHead, Section, Block } from '@src/modules/pageLayout';\nimport packageInfo from './packageInfo.js';\n\nconst preInstall = `$ npm install --save @blacktoolbox/react-list\n\nimport BTBList from '@blacktoolbox/react-list'\nimport '@blacktoolbox/react-list/lib/index.css'`;\n\nconst preRender = `<BTBList\n        dataList=\" Array of entryObj \" \n        defaultActiveID=\" String \"\n        activeID=\" String \"\n        collapseEnable=\" Boolean \"\n        styleObj=\" Object \"\n        slotObj=\" Object \"\n        onEntryClick=\" function(entryObj){} \"\n        onToggle=\" function(entryObj){} \"/>`;\n\nconst preEntryObj = `entryObj = {\n        id: '',\n        title: '',\n        href: '',\n        defaultCollapsed: false,\n        children: []\n}`;\n\nconst preStyleObj = `styleObj = {\n        [ className ]: { inline CSS }\n}`;\n\nconst preSlotObj = `slotObj = {\n        [ entryObj.id ]: ''\n}`;\n\nconst nodeTree = [\n  {\n    id: 'list',\n    title: '<div> .btb-react-list',\n    children: [\n      {\n        id: 'layer',\n        title: '<ul> .btb-react-list-layer .layer-[layer count]',\n        children: [\n          {\n            id: 'container',\n            title: '<li> .layer-container .layer-[layer count]',\n            children: [\n              {\n                id: 'entry',\n                title: '<div> .container_entry .entry-[entryObj.id] .entry-active',\n                children: [\n                  {\n                    id: 'title',\n                    title: '<div> .entry_title',\n                    children: [\n                      {\n                        id: 'link',\n                        title: '<a> .title_link',\n                      }\n                    ]\n                  },\n                  {\n                    id: 'collapseBtn',\n                    title: '<div> .entry_collapseBtn .collapseBtn-default',\n                    children: [\n                      {\n                        id: 'arrow',\n                        title: '<div> .collapseBtn_arrow',\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                id: 'sublayer',\n                title: '<ul>.btb-vue-list-layer.layer-[layer count + 1]',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst tableHeadArr_property = [\n  { name: 'Property Name', id: 'title' },\n  { name: 'Type', id: 'type' },\n  { name: 'Default', id: 'default' },\n  { name: 'Notice', id: 'notice' },\n];\nconst tableHeadArr_entry = [\n  { name: 'Name', id: 'title' },\n  { name: 'Type', id: 'type' },\n  { name: 'Notice', id: 'notice' },\n];\n\nconst tableBodyArr_basic = [\n  { title: 'dataList', type: 'package.paramType.array', default: '[]', notice: 'package.list.property.dataList' },\n  {\n    title: 'activeID',\n    type: 'package.paramType.string',\n    default: 'undefined',\n    notice: 'package.list.property.activeID',\n  },\n  {\n    title: 'defaultActiveID',\n    type: 'package.paramType.string',\n    default: 'undefined',\n    notice: 'package.list.property.defaultActiveID',\n  },\n  {\n    title: 'collapseEnable',\n    type: 'package.paramType.boolean',\n    default: 'false',\n    notice: 'package.list.property.collapseEnable',\n  },\n  { title: 'styleObj', type: 'package.paramType.object', default: '{}', notice: 'package.list.property.styleObj' },\n  { title: 'slotObj', type: 'package.paramType.object', default: '{}', notice: 'package.list.property.slotObj' },\n  {\n    title: 'onEntryClick',\n    type: 'package.paramType.function',\n    default: '()=>{}',\n    notice: 'package.list.property.onEntryClick',\n  },\n  {\n    title: 'onToggle',\n    type: 'package.paramType.function',\n    default: '()=>{}',\n    notice: 'package.list.property.onToggle',\n  },\n  { title: 'ref', type: 'useRef', default: 'undefined', notice: 'package.list.property.ref' },\n];\nconst tableBodyArr_entry = [\n  { title: 'id', type: 'package.paramType.string', notice: 'package.list.entryObj.id' },\n  { title: 'title', type: 'package.paramType.string||package.paramType.node', notice: 'package.list.entryObj.title' },\n  { title: 'href', type: 'package.paramType.string', notice: 'package.list.entryObj.href' },\n  { title: 'defaultCollapsed', type: 'package.paramType.string', notice: 'package.list.entryObj.defaultCollapsed' },\n  { title: 'children', type: 'package.paramType.array', notice: 'package.list.entryObj.children' },\n];\nconst tableBodyArr_slot = [\n  {\n    title: '[ id of entryObj ]',\n    type: 'package.paramType.string||package.paramType.node||package.paramType.function',\n    notice: 'package.list.slotObj.entryObj',\n  },\n];\n\nconst tableSlotObj = {\n  'td-type': (data, column) => {\n    let sep = data[column.id].split('||');\n    let result = '';\n    if (sep.length > 0) {\n      result = sep\n        .map((item) => {\n          return lang.translate(item);\n        })\n        .join(' || ');\n    } else {\n      result = data[column.id] === 'useRef' ? 'useRef' : lang.translate(data[column.id]);\n    }\n    return result;\n  },\n  'td-notice': (data, column) => {\n    return lang.translate(data[column.id]);\n  },\n};\n\nconst Basic = () => {\n  useSelector((state) => {\n    return {\n      languageSetting: state.language.languageSetting,\n    };\n  });\n  return (\n    <Page id=\"btb-pkg-list-basic\">\n      <PageHead title={lang.translate('package.list.name')} clickBtn={openLink} linkList={packageInfo.linkList} />\n      <Section\n        head={\n          <>\n            {`${lang.translate('package.version_colon')}${packageInfo.version}`}\n            <br />\n            {`${lang.translate('package.release_colon')}${packageInfo.updated}`}\n          </>\n        }\n      >\n        <p>{lang.translate(packageInfo.description)}</p>\n      </Section>\n      <Section head={lang.translate('package.section.installation')}>\n        <pre className=\"page_pre\">{preInstall}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.render')}>\n        <pre className=\"page_pre\">{preRender}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.parameters')}>\n        <BTBTable\n          className=\"page_table\"\n          mode=\"list\"\n          headData={tableHeadArr_property}\n          bodyData={tableBodyArr_basic}\n          slotObj={tableSlotObj}\n        />\n        <Block title=\"entryObj\">\n          <p>{lang.translate('package.list.parameters.entryObj')}</p>\n          <pre className=\"page_pre\">{preEntryObj}</pre>\n          <BTBTable\n            className=\"page_table\"\n            mode=\"list\"\n            headData={tableHeadArr_entry}\n            bodyData={tableBodyArr_entry}\n            slotObj={tableSlotObj}\n          />\n        </Block>\n        <Block title=\"styleObj\">\n          <p>{lang.translate('package.list.parameters.styleObj')}</p>\n          <pre className=\"page_pre\">{preStyleObj}</pre>\n        </Block>\n        <Block title=\"slotObj\">\n          <p>{lang.translate('package.list.parameters.slotObj')}</p>\n          <pre className=\"page_pre\">{preSlotObj}</pre>\n          <BTBTable\n            className=\"page_table\"\n            mode=\"list\"\n            headData={tableHeadArr_entry}\n            bodyData={tableBodyArr_slot}\n            slotObj={tableSlotObj}\n          />\n        </Block>\n      </Section>\n      <Section head={lang.translate('package.section.nodeTree')}>\n        <BTBList className=\"page_node_tree\" dataList={nodeTree} />\n        <p>{lang.translate('package.list.nodeTree.notice')}</p>\n      </Section>\n    </Page>\n  );\n};\n\nexport default Basic;\n","import React from 'react';\n\nimport PKGListBasic from '@src/components/packages/list/Basic.jsx';\n\nconst BasicContaier = () => {\n  return <PKGListBasic />;\n};\n\nexport default BasicContaier;\n"],"names":["nodeTree","id","title","children","tableHeadArr_property","name","tableHeadArr_entry","tableBodyArr_basic","type","default","notice","tableBodyArr_entry","tableBodyArr_slot","tableSlotObj","data","column","sep","split","length","map","item","lang","join","useSelector","state","languageSetting","language","React","Page","PageHead","clickBtn","openLink","linkList","packageInfo","Section","head","concat","className","BTBTable","mode","headData","bodyData","slotObj","Block","BTBList","dataList","PKGListBasic"],"sourceRoot":""}