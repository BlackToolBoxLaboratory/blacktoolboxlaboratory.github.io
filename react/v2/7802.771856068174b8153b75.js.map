{"version":3,"file":"7802.771856068174b8153b75.js","mappings":"sPAsBMA,EAAW,CACf,CACEC,GAAI,SACJC,MAAO,gDAILC,EAAwB,CAC5B,CAAEC,KAAM,gBAAiBH,GAAI,SAC7B,CAAEG,KAAM,OAAQH,GAAI,QACpB,CAAEG,KAAM,UAAWH,GAAI,WACvB,CAAEG,KAAM,SAAUH,GAAI,WAGlBI,EAAqB,CACzB,CACEH,MAAO,OACPI,KAAM,2BACNC,QAAS,KACTC,OAAQ,iCAEV,CACEN,MAAO,UACPI,KAAM,2BACNC,QAAS,KACTC,OAAQ,qCAINC,EAAe,CACnB,UAAW,SAACC,EAAMC,GAChB,IAAIC,EAAMF,EAAKC,EAAOV,IAAIY,MAAM,MAWhC,OATID,EAAIE,OAAS,EACNF,EACNG,KAAI,SAACC,GACJ,OAAOC,EAAAA,EAAAA,UAAeD,EACxB,IACCE,KAAK,QAEqB,WAApBR,EAAKC,EAAOV,IAAmB,SAAWgB,EAAAA,EAAAA,UAAeP,EAAKC,EAAOV,IAGlF,EACA,YAAa,SAACS,EAAMC,GAClB,OAAOM,EAAAA,EAAAA,UAAeP,EAAKC,EAAOV,IACpC,GAiDF,EA9CqB,WAMnB,OALAkB,EAAAA,EAAAA,KAAY,SAACC,GACX,MAAO,CACLC,gBAAiBD,EAAME,SAASD,gBAEpC,IAEEE,EAAAA,cAACC,EAAAA,GAAI,CAACvB,GAAG,gCACPsB,EAAAA,cAACE,EAAAA,GAAQ,CACPvB,MAAOe,EAAAA,EAAAA,UAAe,+BACtBS,SAAUC,EAAAA,EACVC,SAAUC,EAAAA,EAAAA,WAEZN,EAAAA,cAACO,EAAAA,GAAO,CACNC,KACER,EAAAA,cAAAA,EAAAA,SAAA,QAAAS,OACMf,EAAAA,EAAAA,UAAe,0BAAwBe,OAAGH,EAAAA,EAAAA,SAC9CN,EAAAA,cAAA,WAAM,GAAAS,OACFf,EAAAA,EAAAA,UAAe,0BAAwBe,OAAGH,EAAAA,EAAAA,WAIlDN,EAAAA,cAAA,SAAIN,EAAAA,EAAAA,UAAeY,EAAAA,EAAAA,qBAErBN,EAAAA,cAACO,EAAAA,GAAO,CAACC,KAAMd,EAAAA,EAAAA,UAAe,iCAC5BM,EAAAA,cAAA,OAAKU,UAAU,YAtFJ,kKAwFbV,EAAAA,cAACO,EAAAA,GAAO,CAACC,KAAMd,EAAAA,EAAAA,UAAe,2BAC5BM,EAAAA,cAAA,OAAKU,UAAU,YApFL,4HAsFZV,EAAAA,cAACO,EAAAA,GAAO,CAACC,KAAMd,EAAAA,EAAAA,UAAe,+BAC5BM,EAAAA,cAACW,EAAAA,EAAQ,CACPD,UAAU,aACVE,KAAK,OACLC,SAAUjC,EACVkC,SAAUhC,EACViC,QAAS7B,KAGbc,EAAAA,cAACO,EAAAA,GAAO,CAACC,KAAMd,EAAAA,EAAAA,UAAe,6BAC5BM,EAAAA,cAACgB,EAAAA,EAAO,CAACN,UAAU,iBAAiBO,SAAUxC,KAItD,EC3GA,EAJ4B,WAC1B,OAAOuB,EAAAA,cAACkB,EAAqB,KAC/B,C","sources":["webpack://homepage_react/./src/components/packages/message/BasicNotice.jsx","webpack://homepage_react/./src/routes/packages/message/BasicNoticeContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport BTBList from '@blacktoolbox/react-list';\nimport BTBTable from '@blacktoolbox/react-table';\n\nimport { lang } from '@src/plugins/btblab-prototype-languages.js';\nimport { openLink } from '@src/utils/functions.js';\nimport { Page, PageHead, Section } from '@src/modules/pageLayout';\nimport packageInfo from './packageInfo.js';\n\nconst preInstall = `$ npm install --save @blacktoolbox/react-message\n\nimport { Notice } from '@blacktoolbox/react-message';\nimport '@blacktoolbox/react-message/lib/index.css'`;\n\nconst preRender = `<Notice\n        type = \" String \", \n        context = \" String || Node \"\n>\n        { children }\n</MessageProvider>`;\n\nconst nodeTree = [\n  {\n    id: 'notice',\n    title: '<div> .btb-react-notice .notice-type-{type}',\n  },\n];\n\nconst tableHeadArr_property = [\n  { name: 'Property Name', id: 'title' },\n  { name: 'Type', id: 'type' },\n  { name: 'Default', id: 'default' },\n  { name: 'Notice', id: 'notice' },\n];\n\nconst tableBodyArr_basic = [\n  {\n    title: 'type',\n    type: 'package.paramType.string',\n    default: \"''\",\n    notice: 'package.message.property.type',\n  },\n  {\n    title: 'context',\n    type: 'package.paramType.string',\n    default: \"''\",\n    notice: 'package.message.property.context',\n  },\n];\n\nconst tableSlotObj = {\n  'td-type': (data, column) => {\n    let sep = data[column.id].split('||');\n    let result = '';\n    if (sep.length > 0) {\n      result = sep\n        .map((item) => {\n          return lang.translate(item);\n        })\n        .join(' || ');\n    } else {\n      result = data[column.id] === 'useRef' ? 'useRef' : lang.translate(data[column.id]);\n    }\n    return result;\n  },\n  'td-notice': (data, column) => {\n    return lang.translate(data[column.id]);\n  },\n};\n\nconst BasicMessage = () => {\n  useSelector((state) => {\n    return {\n      languageSetting: state.language.languageSetting,\n    };\n  });\n  return (\n    <Page id=\"btb-pkg-message-basic-notice\">\n      <PageHead\n        title={lang.translate('package.message.name.notice')}\n        clickBtn={openLink}\n        linkList={packageInfo.linkList}\n      />\n      <Section\n        head={\n          <>\n            {`${lang.translate('package.version_colon')}${packageInfo.version}`}\n            <br />\n            {`${lang.translate('package.release_colon')}${packageInfo.updated}`}\n          </>\n        }\n      >\n        <p>{lang.translate(packageInfo.descriptionNotice)}</p>\n      </Section>\n      <Section head={lang.translate('package.section.installation')}>\n        <pre className=\"page_pre\">{preInstall}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.render')}>\n        <pre className=\"page_pre\">{preRender}</pre>\n      </Section>\n      <Section head={lang.translate('package.section.parameters')}>\n        <BTBTable\n          className=\"page_table\"\n          mode=\"list\"\n          headData={tableHeadArr_property}\n          bodyData={tableBodyArr_basic}\n          slotObj={tableSlotObj}\n        />\n      </Section>\n      <Section head={lang.translate('package.section.nodeTree')}>\n        <BTBList className=\"page_node_tree\" dataList={nodeTree} />\n      </Section>\n    </Page>\n  );\n};\n\nexport default BasicMessage;\n","import React from 'react';\n\nimport PKGMessageBasicNotice from '@src/components/packages/message/BasicNotice.jsx';\n\nconst BasicNoticeContaier = () => {\n  return <PKGMessageBasicNotice />;\n};\n\nexport default BasicNoticeContaier;\n"],"names":["nodeTree","id","title","tableHeadArr_property","name","tableBodyArr_basic","type","default","notice","tableSlotObj","data","column","sep","split","length","map","item","lang","join","useSelector","state","languageSetting","language","React","Page","PageHead","clickBtn","openLink","linkList","packageInfo","Section","head","concat","className","BTBTable","mode","headData","bodyData","slotObj","BTBList","dataList","PKGMessageBasicNotice"],"sourceRoot":""}