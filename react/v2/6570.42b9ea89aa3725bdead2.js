"use strict";(self.webpackChunkhomepage_react=self.webpackChunkhomepage_react||[]).push([[6570],{6570:function(e,t,a){a.r(t),a.d(t,{default:function(){return y}});var n=a(7294),r=a(9704),i=a(119),p=a(1719),l=a(6742),o=a(2007),c=a(6520),d=a(402),m=[{id:"form",title:"<div> .btb-react-form .form-input .input-disabled .input-readonly .input-focused",children:[{id:"input_outer",title:"<div> .input_outer",children:[{id:"prepend",title:"<div> .outer_item .item-prepend"},{id:"inner",title:"<div> .outer_item .item-inner",children:[{id:"before",title:"<div> .inner_item .item-before"},{id:"input",title:"<input> .inner_item .item-input"},{id:"after",title:"<div> .inner_item .item-after"}]},{id:"append",title:"<div> .outer_item .item-append"}]}]}],s=[{name:"Property Name",id:"title"},{name:"Type",id:"type"},{name:"Default",id:"default"},{name:"Notice",id:"notice"}],u=[{title:"prependNode",type:"package.paramType.string||package.paramType.node",default:"undefined",notice:"package.form.property.prependNode"},{title:"appendNode",type:"package.paramType.string||package.paramType.node",default:"undefined",notice:"package.form.property.appendNode"},{title:"beforeNode",type:"package.paramType.string||package.paramType.node",default:"undefined",notice:"package.form.property.beforeNode"},{title:"afterNode",type:"package.paramType.string||package.paramType.node",default:"undefined",notice:"package.form.property.afterNode"},{title:"styleObj",type:"package.paramType.object",default:"{}",notice:"package.button.property.styleObj"},{title:"props",type:"package.paramType.any",default:"undefined",notice:"package.form.property.input"}],f={"td-type":function(e,t){var a=e[t.id].split("||");return a.length>0?a.map((function(e){return l.K.translate(e)})).join(" || "):"useRef"===e[t.id]?"useRef":l.K.translate(e[t.id])},"td-notice":function(e,t){return l.K.translate(e[t.id])}},g=function(){return(0,r.v9)((function(e){return{languageSetting:e.language.languageSetting}})),n.createElement(c.T3,{id:"btb-pkg-form-basic"},n.createElement(c.yG,{title:l.K.translate("package.form.name.input"),clickBtn:o.n,linkList:d.Z.linkList}),n.createElement(c.$0,{head:n.createElement(n.Fragment,null,"".concat(l.K.translate("package.version_colon")).concat(d.Z.version),n.createElement("br",null),"".concat(l.K.translate("package.release_colon")).concat(d.Z.updated))},n.createElement("p",null,l.K.translate(d.Z.description))),n.createElement(c.$0,{head:l.K.translate("package.section.installation")},n.createElement("pre",{className:"page_pre"},"$ npm install --save @blacktoolbox/react-form\n\nimport { Input } from '@blacktoolbox/react-form'\nimport '@blacktoolbox/react-form/lib/index.css'")),n.createElement(c.$0,{head:l.K.translate("package.section.render")},n.createElement("pre",{className:"page_pre"},'<BTBInput\n        prependNode=" String || Node " \n        appendNode=" String || Node " \n        beforeNode=" String || Node " \n        afterNode=" String || Node "\n        styleObj=" Object "\n        { props } \n/>')),n.createElement(c.$0,{head:l.K.translate("package.section.parameters")},n.createElement(p.Z,{className:"page_table",mode:"list",headData:s,bodyData:u,slotObj:f}),n.createElement(c.gO,{title:"styleObj"},n.createElement("p",null,l.K.translate("package.form.parameters.styleObj")),n.createElement("pre",{className:"page_pre"},"styleObj = {\n        [ className ]: { inline CSS }\n}"))),n.createElement(c.$0,{head:l.K.translate("package.section.nodeTree")},n.createElement(i.Z,{className:"page_node_tree",dataList:m})))},y=function(){return n.createElement(g,null)}}}]);