"use strict";(self.webpackChunkhomepage_react=self.webpackChunkhomepage_react||[]).push([[371],{371:function(e,t,a){a.r(t),a.d(t,{default:function(){return k}});var n=a(7294),r=a(9704),c=a(119),l=a(1719),o=a(6742),i=a(2007),p=a(6520),s=a(402),m=[{id:"form",title:"<div> .btb-react-form .form-checkbox .checkbox-disabled .checkbox-inline .checkbox-focused",children:[{id:"checkbox",title:"<input> .checkbox_input"},{id:"trigger",title:"<label> .checkbox_item",children:[{id:"button",title:"<div> .item_button"}]},{id:"label",title:"<label> .checkbox_label"}]}],d=[{name:"Property Name",id:"title"},{name:"Type",id:"type"},{name:"Default",id:"default"},{name:"Notice",id:"notice"}],u=[{title:"formValue",type:"package.paramType.array",default:"[]",notice:"package.form.property.checkboxValue"},{title:"size",type:"package.paramType.string",default:"undefined",notice:"package.form.property.checkboxSize"},{title:"color",type:"package.paramType.string",default:"undefined",notice:"package.form.property.checkboxColor"},{title:"signColor",type:"package.paramType.string",default:"undefined",notice:"package.form.property.checkboxSignColor"},{title:"inline",type:"package.paramType.boolean",default:"false",notice:"package.form.property.inline"},{title:"styleObj",type:"package.paramType.object",default:"{}",notice:"package.button.property.styleObj"},{title:"props",type:"package.paramType.any",default:"undefined",notice:"package.form.property.checkbox"}],b={"td-type":function(e,t){var a=e[t.id].split("||");return a.length>0?a.map((function(e){return o.K.translate(e)})).join(" || "):"useRef"===e[t.id]?"useRef":o.K.translate(e[t.id])},"td-notice":function(e,t){return o.K.translate(e[t.id])}},g=function(){return(0,r.v9)((function(e){return{languageSetting:e.language.languageSetting}})),n.createElement(p.T3,{id:"btb-pkg-form-basic"},n.createElement(p.yG,{title:o.K.translate("package.form.name.checkbox"),clickBtn:i.n,linkList:s.Z.linkList}),n.createElement(p.$0,{head:n.createElement(n.Fragment,null,"".concat(o.K.translate("package.version_colon")).concat(s.Z.version),n.createElement("br",null),"".concat(o.K.translate("package.release_colon")).concat(s.Z.updated))},n.createElement("p",null,o.K.translate(s.Z.description))),n.createElement(p.$0,{head:o.K.translate("package.section.installation")},n.createElement("pre",{className:"page_pre"},"$ npm install --save @blacktoolbox/react-form\n\nimport { Checkbox } from '@blacktoolbox/react-form'\nimport '@blacktoolbox/react-form/lib/index.css'")),n.createElement(p.$0,{head:o.K.translate("package.section.render")},n.createElement("pre",{className:"page_pre"},'<BTBCheckbox\n        formValue=" Array of (Number || String) "\n        size= " String "\n        color=" String "\n        inline=" Boolean "\n        styleObj=" Object "\n        { props }\n</BTBCheckbox>')),n.createElement(p.$0,{head:o.K.translate("package.section.parameters")},n.createElement(l.Z,{className:"page_table",mode:"list",headData:d,bodyData:u,slotObj:b}),n.createElement(p.gO,{title:"styleObj"},n.createElement("p",null,o.K.translate("package.form.parameters.styleObj")),n.createElement("pre",{className:"page_pre"},"styleObj = {\n  [ className ]: { inline CSS }\n}"))),n.createElement(p.$0,{head:o.K.translate("package.section.nodeTree")},n.createElement(c.Z,{className:"page_node_tree",dataList:m})))},k=function(){return n.createElement(g,null)}}}]);